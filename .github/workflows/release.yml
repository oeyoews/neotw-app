name: Release App

on:
  # schedule:
  #   - cron: "00 16 * * *"
  push:
    tags:
      - "v*.*.*"
      # - v[0-9]+.[0-9]+.[0-9]+
    branches:
      - dev
  workflow_dispatch:
  # inputs:
  #   tag_name:
  #     description: "Tag name for release"
  #     required: false
  #     default: nightly

concurrency:
  group: release-ci-group
  cancel-in-progress: true

jobs:
  Linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: "false"

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package.json') }}

      - name: Install dependencies
        run: yarn

      - name: Make Package
        run: yarn make

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        # if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.tag_name != 'nightly')
        # https://github.com/neovim/neovim/blob/234b8c5f3d57294dda06dbc6c1760e5983bd2c19/.github/workflows/release.yml#L264
        with:
          draft: false
          files: out/make/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  Windows:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: "false"

      - name: Set up CV dependency for pngquant-bin
        uses: ilammy/msvc-dev-cmd@v1

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package.json') }}

      - name: Install dependencies
        run: yarn

        # - name: Make Windows (ia32)
        #   run: yarn electron-forge make
        #   env:
        #     CSC_LINK: ${{ secrets.WIN_CERT }}
        #     CSC_KEY_PASSWORD: ${{ secrets.WIN_CERT_PASS }}
        #     CI: true
        #     CI_PULL_REQUEST: ${{ github.event_name == 'pull_request' }}
        #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Make Windows (x64)
        run: yarn make
        env:
          CSC_LINK: ${{ secrets.WIN_CERT }}
          CSC_KEY_PASSWORD: ${{ secrets.WIN_CERT_PASS }}
          CI: true
          CI_PULL_REQUEST: ${{ github.event_name == 'pull_request' }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          files: |
            out/make/**/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
